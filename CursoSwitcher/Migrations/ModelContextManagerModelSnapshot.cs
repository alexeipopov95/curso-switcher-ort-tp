// <auto-generated />
using System;
using CursoSwitcher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursoSwitcher.Migrations
{
    [DbContext(typeof(ModelContextManager))]
    partial class ModelContextManagerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5523),
                            Description = "Sede Almagro\nDirección: Yatay 240\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4958-9000",
                            Name = "Yatay",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5531),
                            Visible_id = "85f5e11d-1471-4570-83be-29885197f02b"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5535),
                            Description = "Sede Belgrano\nDirección: Av. del Libertador 6796\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4789-6500 ",
                            Name = "Belgrano",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5535),
                            Visible_id = "accc1307-d939-4b8c-b27c-f5626bb50889"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Careers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5657),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Analista de Sistemas.",
                            Name = "Analista de Sistemas",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5658),
                            Visible_id = "f411d13d-1c5f-4cfe-9ee3-f298d9022b7b"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5661),
                            Description = "Duración: 3 años.\nTitulo Otorgado: Técnico Superior en Química y Biotecnología.",
                            Name = "Biotecnología",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5661),
                            Visible_id = "c5c41f46-b1cc-4974-8ab0-a6c1d2625f67"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5664),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Producción Musical.",
                            Name = "Sonido y Producción Musical",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5665),
                            Visible_id = "4ac131d9-1f27-46f1-9538-aec04225b9e1"
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5667),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Gráfico Digital.",
                            Name = "Diseño Digital",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5667),
                            Visible_id = "020c49ed-9a10-41ca-a662-b8ed8e146489"
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5670),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Industrial.",
                            Name = "Diseño Industrial",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5670),
                            Visible_id = "6e503d2e-38d6-49da-9f91-c524e6048154"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5688),
                            Description = "Analista de Sistemas 1er año 1°A",
                            Name = "11A",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5689),
                            Visible_id = "8c968589-19f5-46b2-ba0f-fefb84ea89d4"
                        },
                        new
                        {
                            Id = 2,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5695),
                            Description = "Analista de Sistemas 1er año 1°B",
                            Name = "11B",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5695),
                            Visible_id = "b25259a9-9a6a-48f2-ad86-18317d0b56c6"
                        },
                        new
                        {
                            Id = 3,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5698),
                            Description = "Analista de Sistemas 1er año 1°C",
                            Name = "11C",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5698),
                            Visible_id = "b3183521-5829-4fdb-8224-c063d5e5359b"
                        },
                        new
                        {
                            Id = 4,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5701),
                            Description = "Analista de Sistemas 1er año 1°D",
                            Name = "11D",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5701),
                            Visible_id = "3236f258-9f98-42ff-87df-318dacd8aebd"
                        },
                        new
                        {
                            Id = 5,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5704),
                            Description = "Biotecnología Segundo año 1°A",
                            Name = "21A",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5704),
                            Visible_id = "7af21e2e-df76-4d02-ae08-5daa71ee2b87"
                        },
                        new
                        {
                            Id = 6,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5707),
                            Description = "Biotecnología Segundo año 1°B",
                            Name = "21B",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5707),
                            Visible_id = "aa86bccd-b6b4-4dcc-b2ee-1570894ec793"
                        },
                        new
                        {
                            Id = 7,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5709),
                            Description = "Biotecnología Segundo año 1°C",
                            Name = "21C",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5709),
                            Visible_id = "133e7c3f-1f7d-4c79-ad79-fb09e88e433e"
                        },
                        new
                        {
                            Id = 8,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5712),
                            Description = "Biotecnología Segundo año 1°D",
                            Name = "21D",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5712),
                            Visible_id = "42712507-485b-4769-a1c0-147f342428f3"
                        },
                        new
                        {
                            Id = 9,
                            CareerId = 3,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5714),
                            Description = "Sonido y Producción Musical Segundo año 2°A",
                            Name = "22A",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5714),
                            Visible_id = "6b8dee62-4a70-4e44-9aae-a1969c824e72"
                        },
                        new
                        {
                            Id = 10,
                            CareerId = 3,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5719),
                            Description = "Sonido y Producción Musical Segundo año 2°B",
                            Name = "22B",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5719),
                            Visible_id = "4c307488-eedc-4b4d-8ab5-548f85f7276b"
                        },
                        new
                        {
                            Id = 11,
                            CareerId = 3,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5722),
                            Description = "Sonido y Producción Musical Segundo año 2°C",
                            Name = "22C",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5722),
                            Visible_id = "9db6a4af-ccc7-457e-ab12-06aff66fd3a3"
                        },
                        new
                        {
                            Id = 12,
                            CareerId = 3,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5725),
                            Description = "Sonido y Producción Musical Segundo año 2°D",
                            Name = "22PR",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5725),
                            Visible_id = "96cff289-c4df-4508-bb68-b64c3fd4b4b1"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CampusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Is_moderator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CareerId");

                    b.HasIndex("CourseId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5741),
                            Dni = "ADMIN",
                            Email = "secretaria-ites1@ort.edu.ar",
                            Is_moderator = true,
                            Last_name = "ADMIN",
                            Name = "ADMIN",
                            Password = "ADMIN",
                            Updated_at = new DateTime(2022, 7, 12, 21, 22, 29, 401, DateTimeKind.Local).AddTicks(5741),
                            Visible_id = "e81e6e71-48cf-49de-bad0-ce2ddaa67e9d"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfferedCourseId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RequestedCourseId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Courses")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CampusModel", "Campus")
                        .WithMany("Profile")
                        .HasForeignKey("CampusId");

                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Profile")
                        .HasForeignKey("CareerId");

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Campus");

                    b.Navigation("Career");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CoursesModel", "OfferedCourse")
                        .WithMany()
                        .HasForeignKey("OfferedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.ProfileModel", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "RequestedCourse")
                        .WithMany()
                        .HasForeignKey("RequestedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedCourse");

                    b.Navigation("Profile");

                    b.Navigation("RequestedCourse");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
