// <auto-generated />
using System;
using CursoSwitcher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursoSwitcher.Migrations
{
    [DbContext(typeof(ModelContextManager))]
    [Migration("20220622220125_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4019),
                            Description = "Sede Almagro\nDirección: Yatay 240\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4958-9000",
                            Name = "Yatay",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4026),
                            Visible_id = "c912a0d6-6602-4efe-8482-e175fa3addfb"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4030),
                            Description = "Sede Belgrano\nDirección: Av. del Libertador 6796\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4789-6500 ",
                            Name = "Belgrano",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4030),
                            Visible_id = "3c48b517-a750-4d4f-b23f-311f31ea9836"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Careers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4126),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Analista de Sistemas.",
                            Name = "Analista de Sistemas",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4126),
                            Visible_id = "bcbddcc7-d1d4-4623-bd14-02140c8d850a"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4129),
                            Description = "Duración: 3 años.\nTitulo Otorgado: Técnico Superior en Química y Biotecnología.",
                            Name = "Biotecnología",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4129),
                            Visible_id = "1e60f890-987a-4913-a0ad-ade79856f233"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4131),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Producción Musical.",
                            Name = "Sonido y Producción Musical",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4131),
                            Visible_id = "ab22a5e1-4963-402a-aa1c-44651c940b7a"
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4134),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Gráfico Digital.",
                            Name = "Diseño Digital",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4134),
                            Visible_id = "6548f49d-270a-4eef-814b-3f9bd45b6f72"
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4136),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Industrial.",
                            Name = "Diseño Industrial",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4136),
                            Visible_id = "dc25a104-0ee4-4e1f-b8df-1b7e1daad926"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4152),
                            Description = "Organización Empresarial 1°1°",
                            Name = "11OEM",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4153),
                            Visible_id = "72f39a12-a3d1-4582-8c76-9b583ebd8a99"
                        },
                        new
                        {
                            Id = 2,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4158),
                            Description = "Organización Empresarial 1°2°",
                            Name = "12OEM",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4158),
                            Visible_id = "2484bf46-e683-4361-8ae0-72e054d63884"
                        },
                        new
                        {
                            Id = 3,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4161),
                            Description = "Taller de Programación 1°1°",
                            Name = "11TP",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4161),
                            Visible_id = "15e9cbde-c156-424c-9dba-6623c7e8e1b1"
                        },
                        new
                        {
                            Id = 4,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4163),
                            Description = "Taller de Programación 1°2°",
                            Name = "12TP",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4163),
                            Visible_id = "e93d8635-6421-4767-b0dd-f91eba6ad1f1"
                        },
                        new
                        {
                            Id = 5,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4166),
                            Description = "Biotecnología 3°1°",
                            Name = "31BT",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4166),
                            Visible_id = "0dea8410-8b8b-4a22-9f94-d58f148599f7"
                        },
                        new
                        {
                            Id = 6,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4168),
                            Description = "Biotecnología 3°2°",
                            Name = "32BT",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4168),
                            Visible_id = "5dab8598-3e1e-440a-a97d-edf19248e831"
                        },
                        new
                        {
                            Id = 7,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4170),
                            Description = "Farmacoquímica 2°1°",
                            Name = "21FA",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4170),
                            Visible_id = "7993a22c-15f9-42d9-94c0-69e1fbd42498"
                        },
                        new
                        {
                            Id = 8,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4172),
                            Description = "Farmacoquímica 2°2°",
                            Name = "22FA",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4172),
                            Visible_id = "3d5e230d-eacb-4003-b308-9b59d544d6b0"
                        },
                        new
                        {
                            Id = 9,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4174),
                            Description = "Bases de datos 3°1°",
                            Name = "31BD",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4175),
                            Visible_id = "0a8546f1-7985-43a9-bfce-a59957751e66"
                        },
                        new
                        {
                            Id = 10,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4178),
                            Description = "Bases de datos 3°2°",
                            Name = "32BD",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4179),
                            Visible_id = "d7be292f-6cc2-44e9-8db0-d86dd23c417c"
                        },
                        new
                        {
                            Id = 11,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4181),
                            Description = "Programación 2°1°",
                            Name = "21PR",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4181),
                            Visible_id = "614466e2-b5ba-45c4-971c-0392cd3fdee2"
                        },
                        new
                        {
                            Id = 12,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4183),
                            Description = "Programación 2°2°",
                            Name = "22PR",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4183),
                            Visible_id = "47654e25-1321-45fe-9534-6799a4ceebfe"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CampusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Is_moderator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CareerId");

                    b.HasIndex("CourseId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4202),
                            Dni = "ADMIN",
                            Email = "secretaria-ites1@ort.edu.ar",
                            Is_moderator = true,
                            Last_name = "ADMIN",
                            Name = "ADMIN",
                            Password = "ADMIN",
                            Updated_at = new DateTime(2022, 6, 22, 19, 1, 24, 913, DateTimeKind.Local).AddTicks(4203),
                            Visible_id = "9965a503-2d9c-45e1-97fb-2fd137346c1b"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfferedCourseId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RequestedCourseId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Courses")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CampusModel", "Campus")
                        .WithMany("Profile")
                        .HasForeignKey("CampusId");

                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Profile")
                        .HasForeignKey("CareerId");

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Campus");

                    b.Navigation("Career");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CoursesModel", "OfferedCourse")
                        .WithMany()
                        .HasForeignKey("OfferedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.ProfileModel", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "RequestedCourse")
                        .WithMany()
                        .HasForeignKey("RequestedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedCourse");

                    b.Navigation("Profile");

                    b.Navigation("RequestedCourse");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
