// <auto-generated />
using System;
using CursoSwitcher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursoSwitcher.Migrations
{
    [DbContext(typeof(ModelContextManager))]
    [Migration("20220610010507_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5771),
                            Description = "Sede Almagro\nDirección: Yatay 240\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4958-9000",
                            Name = "Yatay",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5777),
                            Visible_id = "ccfb9556-63a6-4767-8079-ced173cfc78c"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5781),
                            Description = "Sede Belgrano\nDirección: Av. del Libertador 6796\nProvincia: Buenos Aires\nPais: Argentina\nTeléfono: 4789-6500 ",
                            Name = "Belgrano",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5782),
                            Visible_id = "417810b9-5aaf-4b4f-a0be-4331a5854360"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Careers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5849),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Analista de Sistemas.",
                            Name = "Analista de Sistemas",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5849),
                            Visible_id = "ba054c3e-6746-45da-a4ec-375e409ec118"
                        },
                        new
                        {
                            Id = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5852),
                            Description = "Duración: 3 años.\nTitulo Otorgado: Técnico Superior en Química y Biotecnología.",
                            Name = "Biotecnología",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5852),
                            Visible_id = "5778c9c4-b3d4-41a3-b912-63867d2e21cd"
                        },
                        new
                        {
                            Id = 3,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5854),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Producción Musical.",
                            Name = "Sonido y Producción Musical",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5854),
                            Visible_id = "8daad9f2-9890-4f03-990e-86a358a25d55"
                        },
                        new
                        {
                            Id = 4,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5856),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Gráfico Digital.",
                            Name = "Diseño Digital",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5856),
                            Visible_id = "d6d7f230-5755-47c9-a89c-02cf995a0589"
                        },
                        new
                        {
                            Id = 5,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5858),
                            Description = "Duración: 2 años.\nTitulo Otorgado: Técnico Superior en Diseño Industrial.",
                            Name = "Diseño Industrial",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5858),
                            Visible_id = "b31ba083-fbfd-4443-83ad-9499af27ae89"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5870),
                            Description = "Organización Empresarial 1°1°",
                            Name = "11OEM",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5870),
                            Visible_id = "a6b9c623-b8d8-4b22-8838-1c1fe3413e2d"
                        },
                        new
                        {
                            Id = 2,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5875),
                            Description = "Organización Empresarial 1°2°",
                            Name = "12OEM",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5875),
                            Visible_id = "dd5a26fb-4fcd-45c4-b527-153417ba57c3"
                        },
                        new
                        {
                            Id = 3,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5878),
                            Description = "Taller de Programación 1°1°",
                            Name = "11TP",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5878),
                            Visible_id = "4e7baac1-bd7a-47b1-b002-cba851099950"
                        },
                        new
                        {
                            Id = 4,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5880),
                            Description = "Taller de Programación 1°2°",
                            Name = "12TP",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5880),
                            Visible_id = "113c69cb-59d1-4c0e-ab51-2258995d8584"
                        },
                        new
                        {
                            Id = 5,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5882),
                            Description = "Biotecnología 3°1°",
                            Name = "31BT",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5882),
                            Visible_id = "fd345f1b-e4d5-4390-a08d-17e2418964d4"
                        },
                        new
                        {
                            Id = 6,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5884),
                            Description = "Biotecnología 3°2°",
                            Name = "32BT",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5884),
                            Visible_id = "65643569-12c5-46aa-8521-97b4352f0960"
                        },
                        new
                        {
                            Id = 7,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5886),
                            Description = "Farmacoquímica 2°1°",
                            Name = "21FA",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5886),
                            Visible_id = "60f9f5ad-d3ae-41c0-82b3-c602990302ed"
                        },
                        new
                        {
                            Id = 8,
                            CareerId = 2,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5888),
                            Description = "Farmacoquímica 2°2°",
                            Name = "22FA",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5888),
                            Visible_id = "1f32dea7-96f6-400f-85af-a9fae454a017"
                        },
                        new
                        {
                            Id = 9,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5890),
                            Description = "Bases de datos 3°1°",
                            Name = "31BD",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5891),
                            Visible_id = "7e708df4-b54d-41a3-bb66-59428e9bf2f6"
                        },
                        new
                        {
                            Id = 10,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5894),
                            Description = "Bases de datos 3°2°",
                            Name = "32BD",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5894),
                            Visible_id = "083c264a-e0f6-429d-bb13-7b599a368a80"
                        },
                        new
                        {
                            Id = 11,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5896),
                            Description = "Programación 2°1°",
                            Name = "21PR",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5897),
                            Visible_id = "e7669ab8-505b-4461-ba47-8b7fcfd6def8"
                        },
                        new
                        {
                            Id = 12,
                            CareerId = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5898),
                            Description = "Programación 2°2°",
                            Name = "22PR",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5899),
                            Visible_id = "fe506d54-afdb-4bb4-b758-41dbda87b354"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CampusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CareerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Is_moderator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CareerId");

                    b.HasIndex("CourseId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5911),
                            Dni = "ADMIN",
                            Email = "secretaria-ites1@ort.edu.ar",
                            Is_moderator = true,
                            Last_name = "ADMIN",
                            Name = "ADMIN",
                            Password = "ADMIN",
                            Updated_at = new DateTime(2022, 6, 9, 22, 5, 6, 872, DateTimeKind.Local).AddTicks(5912),
                            Visible_id = "91429bd1-710c-4fcf-8bc6-c22825b19f8b"
                        });
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestedCourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("TEXT");

                    b.Property<string>("Visible_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OfferedCourseId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RequestedCourseId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CoursesModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Courses")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("CursoSwitcher.Models.ProfileModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CampusModel", "Campus")
                        .WithMany("Profile")
                        .HasForeignKey("CampusId");

                    b.HasOne("CursoSwitcher.Models.CareerModel", "Career")
                        .WithMany("Profile")
                        .HasForeignKey("CareerId");

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Campus");

                    b.Navigation("Career");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CursoSwitcher.Models.RequestsModel", b =>
                {
                    b.HasOne("CursoSwitcher.Models.CoursesModel", "OfferedCourse")
                        .WithMany()
                        .HasForeignKey("OfferedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.ProfileModel", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoSwitcher.Models.CoursesModel", "RequestedCourse")
                        .WithMany()
                        .HasForeignKey("RequestedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedCourse");

                    b.Navigation("Profile");

                    b.Navigation("RequestedCourse");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CampusModel", b =>
                {
                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CursoSwitcher.Models.CareerModel", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
